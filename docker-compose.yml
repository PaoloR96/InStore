services:
  # Servizio MySQL per la gestione del database
  mysql-db:
    image: mysql:latest                             # Utilizza l'immagine più recente di MySQL
    container_name: Mysql_Service                   # Nome del contenitore MySQL
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword             # Password per l'utente root di MySQL
      MYSQL_DATABASE: InStore_db                    # Nome del database da creare all'avvio
      MYSQL_PASSWORD: secret                        # Password dell'utente MySQL
      MYSQL_ROOT_HOST: '%'                          # Consenti la connessione da qualsiasi host
#    networks:
#      - app-network                                 # Aggiungi il contenitore alla rete app-network
    ports:
      - "3306:3306"                                 # Mappa la porta 3306 per le connessioni MySQL
    volumes:
      - mysql-data:/var/lib/mysql                   # Volumes per persistenza dei dati del database

  # Servizio Keycloak per la gestione dell'autenticazione
  keycloak:
    build: ./KeycloakService
    container_name: keycloak_manager
    environment:
      KC_HOSTNAME: http://keycloak_manager:8080
      KC_HOSTNAME_DEBUG: true
      KC_HTTP_ENABLED: true
      KC_HTTP_HOST: keycloak_manager
    ports:
      - "8090:8080"
    volumes:
      - ./KeycloakService/data:/opt/keycloak/data
#    networks:
#      - host
#      - app-network

  # Servizio Vault per la gestione dei segreti
#  vault:
#    build:
#      context: ./VaultService  # Percorso del Dockerfile per Vault
#      dockerfile: Dockerfile  # Nome del Dockerfile
#    container_name: Vault_Manager  # Nome del contenitore di Vault
#    networks:
#      - app-network  # Aggiungi il contenitore alla rete app-network
#    ports:
#      - "8200:8200"  # Mappa la porta 8200 per l'accesso a Vault
#    environment:
#      VAULT_ADDR: http://127.0.0.1:8200  # Indirizzo di Vault per la connessione
#    healthcheck:
#      test: ["CMD", "vault", "status"]  # Comando di verifica della salute di Vault
#      interval: 30s  # Intervallo tra i controlli
#      timeout: 10s  # Tempo massimo per il controllo
#      retries: 3  # Numero di tentativi prima di segnalarlo come fallito
#    cap_add:
#      - IPC_LOCK  # Aggiungi la capacità IPC_LOCK per Vault

  # Servizio per l'applicazione ApplicationCore
  application-core:
    build: ./ApplicationCore
    container_name: ApplicationCore
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://Mysql_Service:3306/InStore_db?useSSL=false&allowPublicKeyRetrieval=true
#      SPRING_DATASOURCE_USERNAME: root  # Username per il database
#      SPRING_DATASOURCE_PASSWORD: rootpassword  # Password per il database
#    networks:
#      - host
#      - app-network
    depends_on:
      - keycloak
      - mysql-db
    ports:
      - "8081:8080"

  debug:
    image: weibeld/ubuntu-networking
    stdin_open: true
    tty: true
#    networks:
#      - host
#     - app-network

# Definizione delle reti utilizzate dai vari servizi
#networks:
#  app-network:
#    driver: host
#    external: true  # Rete esterna già esistente per i contenitori

# Definizione dei volumi per la persistenza dei dati
volumes:
  mysql-data:               # Volume per i dati di MySQL

