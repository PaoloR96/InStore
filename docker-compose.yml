version: '3.8'
#TODO eliminare i commenti

services:
  mysql-db:
    image: mysql:9.2.0
    container_name: Mysql_Service
    restart: "no"
    networks:
      - app-network
#    ports:
#      - "3306:3306"
    environment:
      MYSQL_DATABASE: "InStore_db"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_OPTS: "--lower_case_table_names=1"
    volumes:
      - mysql-data:/var/lib/mysql
    command: --lower_case_table_names=1

  # Servizio Keycloak per la gestione dell'autenticazione
  #  keycloak:
  #    build: ./KeycloakService                        # path of dockerfile
  #    container_name: Keycloak_Manager
  #    ports:
  #      - "8090:8090"                                 # Mappa la porta 8090 per l'accesso a Keycloak
  #    volumes:
  #      - ./KeycloakService/data:/opt/keycloak/data
  #    networks:
  #      - app-network

  vault:
    image: hashicorp/vault:1.18.4
    container_name: vault-service
    restart: "no"
#    ports:
#      - '8200:8200'
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_API_ADDR: "http://0.0.0.0:8200"
    networks:
      - app-network
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/config.hcl


  vault-init:
    container_name: vault-init
    image: hashicorp/vault:1.18.4
    restart: "no"
    environment:
      VAULT_ADDR: "http://vault-service:8200"
    volumes:
      - ./vault/unseal-vault.sh:/vault/unseal-vault.sh
    entrypoint: sh -c "sleep 3 && /vault/unseal-vault.sh"
    networks:
      - app-network
    cap_add:
      - IPC_LOCK
    depends_on:
      - vault

  application-core:
    build:
      context: ./ApplicationCore
      dockerfile: Dockerfile
    container_name: ApplicationCore_Service
    image: bise97/application-core
    restart: "no"
    environment:
      VAULT_TOKEN: ${VAULT_TOKEN}
    networks:
      - app-network
    depends_on:
      - mysql-db
      - vault-init
    #      - keycloak
#    ports:
#      - "8081:8080"

  nginx:
    build:
      context: ./NgnixService
      dockerfile: Dockerfile
    container_name: Nginx_Manager
    image: bise97/instore-nginx
    restart: "no"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./NgnixService/nginx.conf:/etc/nginx/nginx.conf
      - letsencrypt:/etc/letsencrypt  # Volume per i certificati
      - certbot-data:/var/www/certbot   # Volume per la sfida ACME
    networks:
      - app-network
    depends_on:
      - application-core

  certbot:
    image: certbot/certbot:v1.23.0
    container_name: certbot
    restart: "no"
    volumes:
      - certbot-data:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    networks:
      - app-network
    depends_on:
      - nginx
    command:
      - renew
      #- certonly
      #- --webroot
      #- -w
      #- /var/www/certbot
      #- --email=paolorusso3196@gmail.com
      #- --agree-tos
      #- --no-eff-email
      #- -d
      #- instore.puntoitstore.it

# Definizione delle reti utilizzate dai vari servizi
networks:
  app-network:
    external: true  # Rete esterna gi√† esistente per i contenitori

# Definizione dei volumi per la persistenza dei dati
volumes:
  mysql-data:
    name: instore-mysql
  certbot-data:
  letsencrypt: