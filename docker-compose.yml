#TODO eliminare i commenti
#TODO eliminare directory VaultService
#TODO eliminare dockerfile in mysqlserivce
#TODO variabili d'ambiente per mysl-password e token-vault

###########################################
#
# To test the app locally with nginx and keycloak integrated together
# you have to set up "local DNS rules" to resolve the domain names.
#
# In Windows you can modify the file "C:\Windows\System32\drivers\etc\hosts", adding the lines:
#   127.0.0.1 instore.puntoitstore.it
#   127.0.0.1 login.instore.puntoitstore.it
# You are bonding these domains names to the local IP address.
#
# To test in remote, you have to set DNS records to bond the domains instore.puntoitstore.it
# and login.instore.puntoitstore.it to the public IP address of your web server.
#
###########################################

services:
  mysql-db:
    image: mysql:9.2.0
    container_name: Mysql_Service
    restart: "no"
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "InStore_db"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_OPTS: "--lower_case_table_names=1"
    volumes:
      - mysql-data:/var/lib/mysql
    #      - ./MySqlService/persistence:/var/lib/mysql
    command: --lower_case_table_names=1

#  ##########################
#
#   3 users:
#    - user1   ->  CLIENTE
#    - seller1 ->  RIVENDITORE
#    - admin1  ->  ADMIN
#  username and password are the same.
#
#  ########################
  keycloak:
    build: ./KeycloakService
    ##TODO cercare di non accedere come root, modificando solo i permessi di lettura dei certificati
    user: "0:0"
    container_name: login.instore.puntoitstore.it
    environment:

      # remember to modify Root URL in instore-client settings by keycloak UI
      KC_HOSTNAME: ${KEYCLOAK_URL}
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: "true"
      KC_PROXY_HEADERS: "xforwarded"

      KC_HOSTNAME_DEBUG: "true"
      KC_HTTP_ENABLED: "false"
      KC_HTTPS_ENABLED: "true"
      KC_HTTPS_PORT: "8443"
      KC_HTTPS_CERTIFICATE_FILE: "/etc/keycloak/certs/live/login.instore.puntoitstore.it/fullchain.pem"
      KC_HTTPS_CERTIFICATE_KEY_FILE: "/etc/keycloak/certs/live/login.instore.puntoitstore.it/privkey.pem"
    ports:
      - "8090:8443"
    volumes:
      - ./KeycloakService/data:/opt/keycloak/data
      - letsencrypt:/etc/keycloak/certs:ro
    entrypoint: /opt/keycloak/bin/kc.sh start-dev --log="console,file"

  vault:
    image: hashicorp/vault:1.18.4
    container_name: vault.instore.puntoitstore.it
    restart: "no"
    ports:
      - '8200:8200'
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
      - letsencrypt:/vault/certs:ro

    environment:
      VAULT_ADDR: "https://0.0.0.0:8200"
      VAULT_API_ADDR: "https://0.0.0.0:8200"
      VAULT_CACERT: "/vault/certs/live/vault.instore.puntoitstore.it/chain.pem"
      VAULT_CLIENT_CERT: "/vault/certs/live/vault.instore.puntoitstore.it/fullchain.pem"
      VAULT_CLIENT_KEY: "/vault/certs/live/vault.instore.puntoitstore.it/privkey.pem"

    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/config.hcl

  vault-init:
    container_name: vault-init
    image: hashicorp/vault:1.18.4
    restart: "no"
    environment:
      VAULT_ADDR: "https://vault.instore.puntoitstore.it:8200"
      VAULT_CACERT: "/vault/certs/live/vault.instore.puntoitstore.it/chain.pem"
      VAULT_CLIENT_CERT: "/vault/certs/live/vault.instore.puntoitstore.it/fullchain.pem"
      VAULT_CLIENT_KEY: "/vault/certs/live/vault.instore.puntoitstore.it/privkey.pem"
    volumes:
      - ./vault/unseal-vault.sh:/vault/unseal-vault.sh
      - letsencrypt:/vault/certs:ro
    entrypoint: sh -c "sleep 3 && /vault/unseal-vault.sh"
    cap_add:
      - IPC_LOCK
    depends_on:
      - vault

  application-core:
    build:
      context: ./ApplicationCore
      dockerfile: Dockerfile
    container_name: instore.puntoitstore.it
    image: bise97/application-core
    restart: "no"
    environment:
      APPLICATION_URL: ${APPLICATION_URL}
      KEYCLOAK_URL: "http://login.instore.puntoitstore.it:8080"
      VAULT_TOKEN: ${VAULT_TOKEN}
      VAULT_CACERT: "/app/certs/live/vault.instore.puntoitstore.it/chain.pem"
    volumes:
      - letsencrypt:/app/certs:ro
    depends_on:
      - mysql-db
      - vault-init
      - keycloak
    ports:
      - "8081:8080"

  nginx:
    build:
      context: ./NgnixService
      dockerfile: Dockerfile
    container_name: Nginx_Manager
    image: bise97/instore-nginx
    restart: "no"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./NgnixService/nginx.conf:/etc/nginx/nginx.conf
      - letsencrypt:/etc/letsencrypt  # Volume per i certificati
      - certbot-data:/var/www/certbot   # Volume per la sfida ACME
    depends_on:
      - application-core

#  debug:
#    image: weibeld/ubuntu-networking
#    stdin_open: true
#    tty: true
#    networks:
#     - app-network

  certbot:
    image: certbot/certbot:v1.23.0
    container_name: certbot
    restart: "no"
    volumes:
      - certbot-data:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - nginx
    command:
      - renew
      #- certonly
      #- --webroot
      #- -w
      #- /var/www/certbot
      #- --email=paolorusso3196@gmail.com
      #- --agree-tos
      #- --no-eff-email
      #- -d
      #- instore.puntoitstore.it

# Definizione dei volumi per la persistenza dei dati
volumes:
  mysql-data:
    name: instore-mysql
  certbot-data:
  letsencrypt: