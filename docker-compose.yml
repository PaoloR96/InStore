#TODO eliminare i commenti
#TODO eliminare directory VaultService
#TODO eliminare dockerfile in mysqlserivce
#TODO variabili d'ambiente per mysl-password e token-vault

###########################################
#
# To test the app locally with nginx and keycloak integrated together
# you have to set up "local DNS rules" to resolve the domain names.
#
# In Windows you can modify the file "C:\Windows\System32\drivers\etc\hosts", adding the lines:
#   127.0.0.1 instore.puntoitstore.it
#   127.0.0.1 login.instore.puntoitstore.it
# You are bonding these domains names to the local IP address.
#
# To test in remote, you have to set DNS records to bond the domains instore.puntoitstore.it
# and login.instore.puntoitstore.it to the public IP address of your web server.
#
###########################################

services:
  mysql-db:
    image: mysql:9.2.0
    container_name: Mysql_Service
    restart: "no"
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "InStore_db"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_OPTS: "--lower_case_table_names=1"
    volumes:
      - mysql-data:/var/lib/mysql
    #      - ./MySqlService/persistence:/var/lib/mysql
    command: --lower_case_table_names=1

#  ##########################
#
#   3 users:
#    - user1   ->  CLIENTE
#    - seller1 ->  RIVENDITORE
#    - admin1  ->  ADMIN
#  username and password are the same.
#
#  ########################
  keycloak:
    image: keycloak/keycloak:26.1
#    container_name: login.instore.puntoitstore.it
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: password
      # remember to modify Root URL in instore-client settings by keycloak UI
      # KC_HOSTNAME: ${KC_EXT_URL}
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME_DEBUG: true
      KC_HTTP_ENABLED: true
    ports:
      - "8091:8080"
    volumes:
      - ./KeycloakService/data:/opt/keycloak/data
    entrypoint: /opt/keycloak/bin/kc.sh start-dev --log="console,file" --spi-admin-allowed-system-variables=APP_ROOT_URL
#    entrypoint: /opt/keycloak/bin/kc.sh export --file /opt/keycloak/data/realms.cfg

  keycloak2604:
    image: keycloak/keycloak:26.0.4
    container_name: login.instore.puntoitstore.it
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: password
      # remember to modify Root URL in instore-client settings by keycloak UI
      KC_HOSTNAME: ${KC_EXT_URL}
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME_DEBUG: true
      KC_HTTP_ENABLED: true
    ports:
      - "8090:8080"
    volumes:
      - ./KeycloakService/data2604:/opt/keycloak/data
    entrypoint: /opt/keycloak/bin/kc.sh start-dev --log="console,file" --spi-admin-allowed-system-variables=APP_ROOT_URL
#    entrypoint: /opt/keycloak/bin/kc.sh import --file /opt/keycloak/data/realms.cfg

  vault:
    image: hashicorp/vault:1.18.4
    container_name: vault-service
    restart: "no"
    ports:
      - '8200:8200'
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_API_ADDR: "http://0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/config.hcl

  vault-init:
    container_name: vault-init
    image: hashicorp/vault:1.18.4
    restart: "no"
    environment:
      VAULT_ADDR: ${VAULT_URL}
    volumes:
      - ./vault/unseal-vault.sh:/vault/unseal-vault.sh
    entrypoint: sh -c "sleep 3 && /vault/unseal-vault.sh"
    cap_add:
      - IPC_LOCK
    depends_on:
      - vault

#  application-core:
#    build:
#      context: ./ApplicationCore
#      dockerfile: Dockerfile
#    container_name: ApplicationCore_Service
#    #image: bise97/application-core
#    restart: "no"
#    environment:
#      APPLICATION_URL: ${APP_EXT_URL}
#      KEYCLOAK_URL: ${KC_INT_URL}
#      VAULT_TOKEN: ${VAULT_TOKEN}
#      VAULT_URL: ${VAULT_URL}
#      MYSQL_URL: ${MYSQL_URL}
#    depends_on:
#      - vault-init
#    ports:
#      - "8081:8080"

  application-core:
    image: openjdk:17-jdk-slim
    container_name: ApplicationCore_Service
    restart: "no"
    environment:
      APPLICATION_URL: ${APP_EXT_URL}
      KEYCLOAK_URL: ${KC_INT_URL}
      VAULT_TOKEN: ${VAULT_TOKEN}
      VAULT_URL: ${VAULT_URL}
      MYSQL_URL: ${MYSQL_URL}
    depends_on:
      - vault-init
    ports:
      - "8081:8080"
    volumes:
      - ./ApplicationCore/target/${JAR_FILE}:/target/app.jar
    entrypoint: java -jar /target/app.jar

  nginx:
    build:
      context: ./NgnixService
      dockerfile: Dockerfile
    container_name: Nginx_Manager
    #image: bise97/instore-nginx
    restart: "no"
    ports:
      - "80:80"
#      - "443:443"
    volumes:
      - ./NgnixService/nginx.conf:/etc/nginx/nginx.conf
   #   - letsencrypt:/etc/letsencrypt  # Volume per i certificati
   #   - certbot-data:/var/www/certbot   # Volume per la sfida ACME
    depends_on:
      - application-core

#  debug:
#    image: weibeld/ubuntu-networking
#    stdin_open: true
#    tty: true
#    networks:
#     - app-network

#  certbot:
#    image: certbot/certbot:v1.23.0
#    container_name: certbot
#    restart: "no"
#    volumes:
#      #- ./certbot/conf:/etc/letsencrypt:rw
#      #- ./certbot/www:/var/www/certbot:rw
#      - certbot-data:/var/www/certbot
#      - letsencrypt:/etc/letsencrypt
#    networks:
#      - app-network
#    depends_on:
#      - nginx
#    command:
#      - renew
#      #- certonly
#      #- --webroot
#      #- -w
#      #- /var/www/certbot
#      #- --email=paolorusso3196@gmail.com
#      #- --agree-tos
#      #- --no-eff-email
#      #- -d
#      #- instore.puntoitstore.it

# Definizione dei volumi per la persistenza dei dati
volumes:
  mysql-data:
    name: instore-mysql
#  certbot-data:
#  letsencrypt: