#TODO eliminare i commenti
#TODO cambiare i restart dei vari container

###########################################
#
# To test the app locally with nginx and keycloak integrated together
# you have to set up "local DNS rules" to resolve the domain names.
#
# In Windows you can modify the file "C:\Windows\System32\drivers\etc\hosts", adding the lines:
#   127.0.0.1 instore.puntoitstore.it
#   127.0.0.1 login.instore.puntoitstore.it
# You are bonding these domains names to the local IP address.
#
# To test in remote, you have to set DNS records to bond the domains instore.puntoitstore.it
# and login.instore.puntoitstore.it to the public IP address of your web server.
#
###########################################

services:
  mysql-db:
    build:
      context: ./MysqlService
      dockerfile: Dockerfile
    container_name: mysql.instore.puntoitstore.it
    restart: "no"
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "InStore_db"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_OPTS: "--lower_case_table_names=1"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./MysqlService/keyring:/var/lib/mysql-keyring/
      - ./letsencrypt/archive/mysql.instore.puntoitstore.it:/etc/mysql/certs:ro
    command:
      - --lower_case_table_names=1
      - --require-secure-transport=ON
      - --ssl-cert=/etc/mysql/certs/fullchain1.pem
      - --ssl-key=/etc/mysql/certs/privkey1.pem
      - --default-table-encryption
      - --max_connections=100
      - --long_query_time=2 # Logga query lente (>2s)
      - --slow_query_log=ON # Abilita slow query log
      - --slow_query_log_file=/var/lib/mysql/mysql-slow.log # Percorso del file di log
      - --log_output=FILE # Log su file
      - --wait_timeout=3600 # Timeout connessioni inattive
      - --interactive_timeout=3600  # Timeout client interattivi
    networks:
      - instore_net

  #  ##########################
  #
  #   Users:
  #    - user1:user1   ->  CLIENTE
  #    - seller1:seller1 ->  RIVENDITORE
  #    - admin1:admin1  ->  ADMIN
  #
  #  ########################
  keycloak2604:
    image: keycloak/keycloak:26.0.4
    ## TODO cercare di non accedere come root, modificando solo i permessi di lettura dei certificati
    user: "0:0"
    container_name: login.instore.puntoitstore.it
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_ADMIN_USR} # TODO implements a secure way to access to keycloak control panel
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_ADMIN_PWD}
      # remember to modify Root URL in instore-client settings by keycloak UI
      KC_HOSTNAME: ${KC_EXT_URL}
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: "true"
      KC_PROXY_HEADERS: "xforwarded"
      KC_HOSTNAME_DEBUG: "true"
      KC_HTTP_ENABLED: "false"
      KC_HTTPS_ENABLED: "true"
      KC_HTTPS_PORT: "8443"
      KC_HTTPS_CERTIFICATE_FILE: "/etc/keycloak/certs/fullchain1.pem"
      KC_HTTPS_CERTIFICATE_KEY_FILE: "/etc/keycloak/certs/privkey1.pem"
    ports:
      - "8090:8443"
    volumes:
      - ./KeycloakService/data2604:/opt/keycloak/data
      - ./letsencrypt/archive/login.instore.puntoitstore.it:/etc/keycloak/certs:ro
    entrypoint: /opt/keycloak/bin/kc.sh start-dev --log="console,file" --log-file-level=debug
    networks:
      - instore_net

  vault:
    build:
      context: ./VaultService
      dockerfile: Dockerfile
#    user: "vaultuser"
    container_name: vault.instore.puntoitstore.it
    restart: "no"
    ports:
      - '8200:8200'
    volumes:
      - ./VaultService/config:/vault/config
      - ./VaultService/policies:/vault/policies
      - ./VaultService/data:/vault/data
      - ./VaultService/logs:/vault/logs
      - ./letsencrypt/archive/vault.instore.puntoitstore.it:/vault/certs:ro

    environment:
      VAULT_ADDR: "https://0.0.0.0:8200"
      VAULT_API_ADDR: "https://0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
      #IPC_LOCK: le pagine di memoria afferenti allâ€™applicazione
      #vengono conservate nella RAM, senza che possa essere effettuato lo swap
    entrypoint: vault server -config=/vault/config/config.hcl
    networks:
      - instore_net

  vault-init:
    container_name: vault-init
    image: hashicorp/vault:1.18.4
    user: "vault"
    restart: "no"
    environment:
      VAULT_ADDR: ${VAULT_URL}
    volumes:
      - ./VaultService/unseal-vault.sh:/vault/unseal-vault.sh
    entrypoint: sh -c "sleep 3 && /vault/unseal-vault.sh"
    cap_add:
      - IPC_LOCK
    depends_on:
      - vault
    networks:
      - instore_net

  application-core:
    image: openjdk:17-jdk-slim
    container_name: instore.puntoitstore.it
    restart: "no"
    environment:
      APPLICATION_URL: ${APP_EXT_URL}
      KEYCLOAK_URL: ${KC_INT_URL}
      VAULT_TOKEN: ${VAULT_TOKEN}
      VAULT_URL: ${VAULT_URL}
      MYSQL_URL: ${MYSQL_URL}
    depends_on:
      - keycloak2604
      - vault
      - mysql-db
      - vault-init
      - nginx
    ports:
      - "8081:8080"
    volumes:
      - ./spring_log:/var/log/spring
      - ./ApplicationCore/target/${JAR_FILE}:/target/app.jar:ro
      - ./letsencrypt/archive/instore.puntoitstore.it:/app/certs:ro
    entrypoint: java -jar /target/app.jar
    networks:
      - instore_net

  nginx:
    build:
      context: ./NginxService
      dockerfile: Dockerfile
    container_name: nginx
    restart: "no"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./NginxService/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./NginxService/log:/var/log/nginx
      - ./letsencrypt:/etc/letsencrypt  # Volume per i certificati
      #- certbot-data:/var/www/certbot   # Volume per la sfida ACME
    networks:
      - instore_net

#  debug:
#    image: weibeld/ubuntu-networking
#    stdin_open: true
#    tty: true
#    networks:
#     - app-network

#  certbot:
#    image: certbot/certbot:v1.23.0
#    container_name: certbot
#    restart: "no"
#    volumes:
#      - ./certbot:/var/www/certbot
#      - ./letsencrypt:/etc/letsencrypt
#    depends_on:
#      - nginx
#    command:
#      - renew
      #- certonly
      #- --webroot
      #- -w
      #- /var/www/certbot
      #- --email=paolorusso3196@gmail.com
      #- --agree-tos
      #- --no-eff-email
      #- -d
      #- instore.puntoitstore.it

volumes:
  mysql-data:

networks:
  instore_net:
    external: true