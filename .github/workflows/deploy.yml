name: Docker Build & Security Scan

on:
  push:
    branches:
      - master

env:
  DOCKER_COMPOSE_VERSION: "1.29.2"

jobs:
  docker-security-scan:
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

#      - name: Set up Docker and Docker Compose
#        run: |
#          sudo apt-get update
#          sudo apt-get install docker-compose -y
#          docker --version
#          docker compose version
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Build ApplicationCore jar
#        working-directory: ./ApplicationCore
#        run: mvn clean package -DskipTests
#
#
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Build and tag Docker images
#        run: |
#          docker build -t instore/mysql-db ./MysqlService
#          docker build -t instore/vault ./VaultService
#          docker build -t instore/nginx ./NginxService
#          docker build -t instore/application-core ./ApplicationCore
#
#      # Trivy scans
#      - name: Trivy scan - mysql-db
#        uses: aquasecurity/trivy-action@master
#        with:
#          scan-type: image
#          image-ref: instore/mysql-db
#          format: sarif
#          output: trivy-results-mysql-db.sarif
#
#      - name: Trivy scan - vault
#        uses: aquasecurity/trivy-action@master
#        with:
#          scan-type: image
#          image-ref: instore/vault
#          format: sarif
#          output: trivy-results-vault.sarif
#
#      - name: Trivy scan - nginx
#        uses: aquasecurity/trivy-action@master
#        with:
#          scan-type: image
#          image-ref: instore/nginx
#          format: sarif
#          output: trivy-results-nginx.sarif
#
#      - name: Trivy scan - application-core
#        uses: aquasecurity/trivy-action@master
#        with:
#          scan-type: image
#          image-ref: instore/application-core
#          format: sarif
#          output: trivy-results-appcore.sarif
#
#      # Upload SARIF reports
#      - name: Upload Trivy SARIF - mysql-db
#        uses: github/codeql-action/upload-sarif@v3
#        with:
#          sarif_file: trivy-results-mysql-db.sarif
#          category: trivy-mysql
#
#      - name: Upload Trivy SARIF - vault
#        uses: github/codeql-action/upload-sarif@v3
#        with:
#          sarif_file: trivy-results-vault.sarif
#          category: trivy-vault
#
#      - name: Upload Trivy SARIF - nginx
#        uses: github/codeql-action/upload-sarif@v3
#        with:
#          sarif_file: trivy-results-nginx.sarif
#          category: trivy-nginx
#
#      - name: Upload Trivy SARIF - application-core
#        uses: github/codeql-action/upload-sarif@v3
#        with:
#          sarif_file: trivy-results-appcore.sarif
#          category: trivy-appcore

      # SSH + Deploy
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Deploy to DigitalOcean
        run: |
          ssh ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }} << 'EOF'
            cd /mnt/volume_instore/
            rm -r InStore/
            git clone https://github.com/PaoloR96/InStore.git
            cp -r keyring/ InStore/MysqlService/
            cp -r letsencrypt/ InStore/
            mkdir InStore/MysqlService/logs
            mkdir InStore/VaultService/logs
            mkdir InStore/NginxService/log
            mkdir InStore/ApplicationCore/spring_log
            
            chown -R 999:999 InStore/letsencrypt/archive/mysql.instore.puntoitstore.it
            chown -R vaultuser:vaultgroup InStore/letsencrypt/archive/vault.instore.puntoitstore.it
            chown -R 1000:1000 InStore/letsencrypt/archive/instore.puntoitstore.it
            chown -R 1000:1000 InStore/letsencrypt/archive/login.instore.puntoitstore.it
          
            chown -R 999:999 InStore/MysqlService
            chown -R vaultuser:vaultgroup InStore/VaultService
            chown -R 1000:1000 InStore/ApplicationCore
            chown -R 1000:1000 InStore/NginxService
            chown -R 1000:1000 InStore/KeycloakService
          
            cd InStore/VaultService
            chmod +x unseal-vault.sh
            cd ..
            docker-compose down
            docker-compose build   
            cd ApplicationCore
            mvn clean package -DskipTests
            cd ..
            docker-compose up -d
            sleep 40
            docker-compose up -d
            sleep 40
            docker-compose restart nginx
          EOF