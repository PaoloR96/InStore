worker_processes 1;
pid /run/nginx.pid;
# Enable error logging
error_log /var/log/nginx/error.log info;
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    #     Enable business-logic logging
    access_log /var/log/nginx/acces.log;
    # Limitazione del numero di richieste per IP: 10 richieste al secondo
    limit_req_zone $binary_remote_addr zone=req_limit_zone:10m rate=10r/s;

    # Limitazione del numero di connessioni simultanee per IP
    limit_conn_zone $binary_remote_addr zone=conn_limit_zone:10m;


    sendfile on;
    keepalive_timeout 65;
    server_tokens off;  #  Disabilita l'header "Server: nginx/x.y" impedisce di esporre nome e versione del software utilizzato dal server web, rendendo più difficile l’attività di fingerprinting da parte di attori malevoli.

    resolver 127.0.0.11 valid=30s;  # DNS per Docker
    # mappa delle chiamate da effettuare
    map $request_method $method_not_allowed {
        default     1;  # Blocco predefinito per tutti i metodi non elencati
        GET         0;  # Permetti GET
        HEAD        0;  # Permetti HEAD
        POST        0;  # Permetti POST
        PUT         0;  # Permetti PUT
        DELETE      0;  # Permetti PUT
        PATCH       0;
    }

    server {
        listen 80;
        server_name login.instore.puntoitstore.it;

        #location /.well-known/acme-challenge/ {
        #            root /var/www/certbot;
        #}

        location / {
            return 301 https://$host$request_uri;
        }
    }

    #server {
    #        listen 80;
    #       server_name vault.instore.puntoitstore.it;

    #      location / {
    #       return 301 https://$host$request_uri;
    #    }
    #}

    server {
        listen 80;
        server_name instore.puntoitstore.it;

        # Percorso per la sfida Let's Encrypt
        #location /.well-known/acme-challenge/ {
        #    root /var/www/certbot;
        #}

        # Redirezione a HTTPS per tutte le altre richieste
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name login.instore.puntoitstore.it;


        # Certificati SSL
        ssl_certificate /etc/letsencrypt/archive/login.instore.puntoitstore.it/fullchain1.pem;
        ssl_certificate_key /etc/letsencrypt/archive/login.instore.puntoitstore.it/privkey1.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Sicurezza aggiuntiva tramite HTTP Security Headers
        add_header X-XSS-Protection "1; mode=block" always;
        #add_header Referrer-Policy "no-referrer" always;
        #      add_header Content-Security-Policy "
        #       default-src 'self';
        #        script-src 'self' https://www.google.com https://www.gstatic.com 'unsafe-inline';
        #        style-src 'self' https://fonts.googleapis.com 'unsafe-inline';
        #        img-src 'self' data: https://www.gstatic.com https://www.google.com;
        #        frame-src https://www.google.com https://www.recaptcha.net;
        #        font-src 'self' https://fonts.gstatic.com https://login.instore.puntoitstore.it;
        #        connect-src 'self' https://www.google.com https://www.recaptcha.net;
#        object-src 'none';
        #        " always;




        location / {
            # Consente solo GET, HEAD, PUT e POST, rifiuta tutti gli altri metodi
            if ($method_not_allowed) {
                return 405;
             }

            # Difesa contro DoS: limita richieste e connessioni simultanee per IP
          #  limit_req zone=req_limit_zone burst=20 nodelay;
           # limit_conn conn_limit_zone 10;

            proxy_pass https://login.instore.puntoitstore.it:8443;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    }

    server {
        listen 443 ssl;
        server_name instore.puntoitstore.it;

        # Certificati SSL
        ssl_certificate /etc/letsencrypt/archive/instore.puntoitstore.it/fullchain1.pem;
        ssl_certificate_key /etc/letsencrypt/archive/instore.puntoitstore.it/privkey1.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;


        location / {
            # Consente solo GET, HEAD, PUT e POST, rifiuta tutti gli altri metodi
             if ($method_not_allowed) {
                return 405;
             }
            # Difesa contro DoS: limita richieste e connessioni simultanee per IP
          #  limit_req zone=req_limit_zone burst=20 nodelay;
           # limit_conn conn_limit_zone 10;
            proxy_pass https://instore.puntoitstore.it:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Gestione degli errori
        #error_page 404 /error/404;
        #error_page 500 502 503 504 /error/50x;

        #location ^~ /error/ {
        #   proxy_pass http://application-core:8080;
        #  proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto $scheme;
        #}
    }

}